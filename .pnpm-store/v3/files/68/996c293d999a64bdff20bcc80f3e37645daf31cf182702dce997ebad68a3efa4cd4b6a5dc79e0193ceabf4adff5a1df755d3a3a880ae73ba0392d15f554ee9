import { Event, EventCallback, EventTarget, EventTargetAddListenerOptions } from "./event-target";
export declare class NavigationEventTarget<T> extends EventTarget {
    addEventListener<K extends keyof T>(type: K, listener: EventCallback<T[K] extends Event ? T[K] : never>, options?: boolean | EventTargetAddListenerOptions): void;
    addEventListener(type: string | symbol, listener: EventCallback, options?: boolean | EventTargetAddListenerOptions): void;
    removeEventListener(type: string | symbol, listener: EventCallback, options?: unknown): void;
    removeEventListener(type: string | symbol, callback: Function, options?: unknown): void;
}
