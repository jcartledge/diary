import { Event } from "./event";
import { EventCallback } from "./callback";
import { EventTargetAddListenerOptions, EventTargetListenersThis } from "./event-target-options";
import { EventTargetListeners } from "./event-target-listeners";
export type { EventCallback, EventTargetAddListenerOptions };
export interface AsyncEventTarget extends EventTargetListeners {
    new (thisValue?: unknown): AsyncEventTarget;
    dispatchEvent(event: Event): void | Promise<void>;
}
export declare class AsyncEventTarget extends EventTargetListeners implements AsyncEventTarget {
    readonly [EventTargetListenersThis]?: unknown;
    constructor(thisValue?: unknown);
}
