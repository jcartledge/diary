"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("@testing-library/react");
var __1 = require("..");
var fixtures_1 = require("./fixtures");
describe('souvlaki', function () {
    describe('associating multiple helpers to a single wrapper', function () {
        it('adds the wrapper once if the first of two no-param helpers is used', function () {
            var _a = (0, __1.createHelpers)(function (_, __) {
                return function (_a) {
                    var children = _a.children;
                    return ((0, jsx_runtime_1.jsx)(fixtures_1.TitleAndVotesPrefixer, __assign({ title: "Fixed title", votes: 3 }, { children: children })));
                };
            }), withTitle = _a[0], withVotes = _a[1];
            var rendered = (0, react_1.render)((0, jsx_runtime_1.jsx)(fixtures_1.TestComponent, {}), {
                wrapper: (0, __1.wrap)(withTitle()),
            });
            expect(rendered.container.innerHTML).toEqual((0, fixtures_1.condense)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n          <h1>Fixed title</h1>\n          <h2>3 votes</h2>\n          <span>Oh hey!</span>\n        "], ["\n          <h1>Fixed title</h1>\n          <h2>3 votes</h2>\n          <span>Oh hey!</span>\n        "]))));
        });
        it('adds the wrapper once if the second of two no-param helpers is used', function () {
            var _a = (0, __1.createHelpers)(function (_, __) {
                return function (_a) {
                    var children = _a.children;
                    return ((0, jsx_runtime_1.jsx)(fixtures_1.TitleAndVotesPrefixer, __assign({ title: "Fixed title", votes: 3 }, { children: children })));
                };
            }), withTitle = _a[0], withVotes = _a[1];
            var rendered = (0, react_1.render)((0, jsx_runtime_1.jsx)(fixtures_1.TestComponent, {}), {
                wrapper: (0, __1.wrap)(withVotes()),
            });
            expect(rendered.container.innerHTML).toEqual((0, fixtures_1.condense)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n          <h1>Fixed title</h1>\n          <h2>3 votes</h2>\n          <span>Oh hey!</span>\n        "], ["\n          <h1>Fixed title</h1>\n          <h2>3 votes</h2>\n          <span>Oh hey!</span>\n        "]))));
        });
        it('adds the wrapper once if both no-param helpers are used', function () {
            var _a = (0, __1.createHelpers)(function (_, __) {
                return function (_a) {
                    var children = _a.children;
                    return ((0, jsx_runtime_1.jsx)(fixtures_1.TitleAndVotesPrefixer, __assign({ title: "Fixed title", votes: 3 }, { children: children })));
                };
            }), withTitle = _a[0], withVotes = _a[1];
            var rendered = (0, react_1.render)((0, jsx_runtime_1.jsx)(fixtures_1.TestComponent, {}), {
                wrapper: (0, __1.wrap)(withTitle(), withVotes()),
            });
            expect(rendered.container.innerHTML).toEqual((0, fixtures_1.condense)(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n          <h1>Fixed title</h1>\n          <h2>3 votes</h2>\n          <span>Oh hey!</span>\n        "], ["\n          <h1>Fixed title</h1>\n          <h2>3 votes</h2>\n          <span>Oh hey!</span>\n        "]))));
        });
        it('can pass params from the first of two wrappers', function () {
            var _a = (0, __1.createHelpers)(function (_a, __) {
                var title = _a[0];
                return function (_a) {
                    var children = _a.children;
                    return ((0, jsx_runtime_1.jsx)(fixtures_1.TitleAndVotesPrefixer, __assign({ title: title, votes: 3 }, { children: children })));
                };
            }), withTitle = _a[0], withVotes = _a[1];
            var rendered = (0, react_1.render)((0, jsx_runtime_1.jsx)(fixtures_1.TestComponent, {}), {
                wrapper: (0, __1.wrap)(withTitle('Custom title')),
            });
            expect(rendered.container.innerHTML).toEqual((0, fixtures_1.condense)(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n          <h1>Custom title</h1>\n          <h2>3 votes</h2>\n          <span>Oh hey!</span>\n        "], ["\n          <h1>Custom title</h1>\n          <h2>3 votes</h2>\n          <span>Oh hey!</span>\n        "]))));
        });
        it('can pass params from the second of two wrappers', function () {
            var _a = (0, __1.createHelpers)(function (_, _a) {
                var votes = _a[0];
                return function (_a) {
                    var children = _a.children;
                    return ((0, jsx_runtime_1.jsx)(fixtures_1.TitleAndVotesPrefixer, __assign({ title: "Fixed title", votes: votes }, { children: children })));
                };
            }), withTitle = _a[0], withVotes = _a[1];
            var rendered = (0, react_1.render)((0, jsx_runtime_1.jsx)(fixtures_1.TestComponent, {}), {
                wrapper: (0, __1.wrap)(withVotes(9)),
            });
            expect(rendered.container.innerHTML).toEqual((0, fixtures_1.condense)(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n          <h1>Fixed title</h1>\n          <h2>9 votes</h2>\n          <span>Oh hey!</span>\n        "], ["\n          <h1>Fixed title</h1>\n          <h2>9 votes</h2>\n          <span>Oh hey!</span>\n        "]))));
        });
        it('can pass params from both wrappers', function () {
            var _a = (0, __1.createHelpers)(function (_a, _b) {
                var title = _a[0];
                var votes = _b[0];
                return function (_a) {
                    var children = _a.children;
                    return ((0, jsx_runtime_1.jsx)(fixtures_1.TitleAndVotesPrefixer, __assign({ title: title, votes: votes }, { children: children })));
                };
            }), withTitle = _a[0], withVotes = _a[1];
            var rendered = (0, react_1.render)((0, jsx_runtime_1.jsx)(fixtures_1.TestComponent, {}), {
                wrapper: (0, __1.wrap)(withTitle('Custom title'), withVotes(50)),
            });
            expect(rendered.container.innerHTML).toEqual((0, fixtures_1.condense)(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n        <h1>Custom title</h1>\n        <h2>50 votes</h2>\n        <span>Oh hey!</span>\n        "], ["\n        <h1>Custom title</h1>\n        <h2>50 votes</h2>\n        <span>Oh hey!</span>\n        "]))));
        });
    });
});
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6;
